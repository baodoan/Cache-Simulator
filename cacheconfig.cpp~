#include "cacheconfig.h"
#include "utils.h"

CacheConfig::CacheConfig(uint32_t size, uint32_t block_size, uint32_t associativity)
: _size(size), _block_size(block_size), _associativity(associativity) {
  /**
   * TODO
   * Compute and set `_num_block_offset_bits`, `_num_index_bits`, `_num_tag_bits`.
  */ 


/*
Implement the CacheConfig constructor in cacheconfig.cpp, which computes and stores the number
of bits in each portion of the address for a specific cache configuration. Remember that our addresses
are 32 bits. Test it using the unit tests; weâ€™ve provided one test called CacheConfig.NumBits.
*/
   _num_block_offset_bits = log_2(block_size)
  _num_index_bits = log_2(size / block_size / associativity);
   _num_tag_bits= 32 - _num_block_offset_bits - _num_index_bits ;

}
